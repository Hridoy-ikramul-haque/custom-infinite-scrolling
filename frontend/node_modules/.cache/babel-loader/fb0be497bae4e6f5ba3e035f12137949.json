{"ast":null,"code":"var _jsxFileName = \"D:\\\\InfiniteScrolling\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [student, setStudent] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:5000/api/getInfo?limit=10`).then(res => res.json()).then(data => console.log(data.slice(0, 20)));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: student.map(p => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: p.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"1N9kYI2/3YzNL9G+rTVm4l+ZNqI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/InfiniteScrolling/frontend/src/App.js"],"names":["React","useEffect","useState","App","student","setStudent","fetch","then","res","json","data","console","log","slice","map","p","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAAE,4CAAF,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAc,EAAd,CAAZ,CAFlB;AAGD,GAJQ,EAIN,EAJM,CAAT;AAKA,sBACE;AAAA,cACGT,OAAO,CAACU,GAAR,CAAaC,CAAD,IAAO;AAClB,0BAAO;AAAA,kBAAMA,CAAC,CAACC;AAAR;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAdD;;GAAMb,G;;KAAAA,G;AAgBN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [student, setStudent] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:5000/api/getInfo?limit=10`)\n      .then((res) => res.json())\n      .then((data) => console.log(data.slice(0, 20)));\n  }, []);\n  return (\n    <div>\n      {student.map((p) => {\n        return <div>{p.name}</div>;\n      })}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}